// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  nom String
  prenom String
  tel String @db.VarChar(10)
  adress String
  role Role 
  email String @unique
  password String

  created_at DateTime @default(now())

  session Session? // relation vers la session
  collecte Collecte[]
}

// many to many y'a rien a mettre
// one to many mettre les crochet sans @unique
// one to one faut mettre le ? avec @unique

model Collecte {
    id Int @id @default(autoincrement())
    quantite_kg Float
    forme_collecte String
    date_collecte DateTime @default(now())
    chauffeur String
    forme_vehicule String
    operator_name String
    quality String
    quantity_strange_corps Float
    num_lot String
    score String 
    facturation Float

    tierCollecte TierCollecte @relation(fields: [tierCollecteId], references: [id]) // relation avec la table tierCollecte
    tierCollecteId Int
    expedition Expedition @relation(fields: [expeditionId], references: [id]) // relation avec la table expedition
    expeditionId Int 
    user User @relation(fields: [userId], references: [id]) // relation avec la table user
    userId Int                                               // relation avec la table user
}

model Expedition {
      id Int @id @default(autoincrement())
      date_expedition DateTime @default(now())
      destinataire String
      num_bl String
      num_facture String
      nb_palette String
      poids_net_total Float

      tiersCompacte TiersCompacte?
      collecte Collecte[]
}

model TiersCompacte {
  id Int @id @default(autoincrement())
  nom String
  adresse String
  type_tiers String
  contact_nom String
  contact_email String
  contact_num String

  expedition Expedition @relation(fields: [expeditionId], references: [id]) // relation avec la table expedition
  expeditionId Int @unique                                           // relation avec la table expedition
}

model TierCollecte {
  id Int @id @default(autoincrement())
  nom String
  adresse String
  type_tiers String
  score_facilite_acces Score
  contact_nom String
  contact_email String @unique
  contact_num String @db.VarChar(10)
  role Role @default(CLIENT)

  collecte Collecte[]                                              // relation avec la table collectes
}

enum Score {
  UN
  DEUX
  TROIS
}

enum Role {
  ADMIN  // chef de projet
  OPERATOR // op√©rateur
  DRIVER // chauffeur
  CLIENT // client
}

model Session {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
}

